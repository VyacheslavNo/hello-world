import pandas as pd
from pyparsing import Word, Optional, alphas, nums

data = pd.read_csv('adventum2.csv', skiprows=7, header=None, error_bad_lines=False, warn_bad_lines=False)
final_dict = {}
line_number = 0
while line_number < len(data):
    
    # парсинг строки из первого столбца
    column_1 = data.loc[line_number].values[0]
    line = Word(alphas + '.' + '(' + ')') + '/' + Word(alphas + '(' + ')')
    full_line = line + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line) + Optional('>' + line)
    s_c = full_line.parseString(column_1).asList()
    
    # парсинг строки из третьего столбца
    column_3 = data.loc[line_number].values[2]
    line = Word(nums)
    full_line = Optional(line + '\xa0') + Optional(line + '\xa0') + Optional(line + '\xa0') + Optional(line + '\xa0') + line + ',' + line
    prices = full_line.parseString(column_3)
    
    # Запись в source_channel только нужных элементов из s_c
    source_channel = []
    i = 0
    while i < (len(s_c)+1)/2:
        source_channel.append(s_c[i*2])
        i = i + 1
    
    # подсчет интересующих нас элементов в строке и запись результатов в словарь
    dict = {}
    i = 0
    number_conversion = 0
    while i < len(source_channel):
        if source_channel[i]=='cpm':
            st = source_channel[i-1] + '/' + source_channel[i]
            dict[st] = dict.setdefault(st, 0) + 1
            number_conversion = number_conversion +1
        elif source_channel[i]=='cpc':
            st = source_channel[i-1] + '/' + source_channel[i]
            dict[st] = dict.setdefault(st, 0) + 1
            number_conversion = number_conversion +1
        elif source_channel[i]=='referral':
            st = source_channel[i-1] + '/' + source_channel[i]
            dict[st] = dict.setdefault(st, 0) + 1
            number_conversion = number_conversion + 1
        i = i + 1
    
    # преобразование строки из третьего столбца в число
    i = 0
    prices_str = ''
    while i < ((len(prices))-1)/2:
        prices_str = prices_str + prices[i*2]
        i = i + 1
    prices_str_float = float(prices_str) +  float(prices[i*2])/100
    
    # вычисление доли заработка, приходящейся на один платный переход
    if number_conversion != 0:
        price_onepart = prices_str_float/number_conversion
    else:
        price_onepart = 0
        
    # вычисление заработка каждого платного канала и запись результата в финальный словарь
    for f in dict.keys():
        dict[f] = dict[f]*price_onepart
        if dict[f] != 0:
            final_dict[f] = final_dict.setdefault(f, 0) + dict[f]

    line_number = line_number + 1

    
l = lambda x: x[1]
final_dict = sorted(final_dict.items(), key=l, reverse=True)
print(final_dict)

